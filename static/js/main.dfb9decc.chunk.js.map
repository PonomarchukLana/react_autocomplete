{"version":3,"sources":["helper.ts","components/Autocomplete/Autocomplete.tsx","data/people.ts","App.tsx","index.tsx"],"names":["timerId","Autocomplete","_ref2","options","getValue","showMenu","setShowMenu","useState","currentValue","setCurrentValue","searchQwery","setSearchQwery","currentOptions","getCurrentOptions","qwery","filter","_ref","name","toLowerCase","includes","debouncedSearchQuery","callback","arg","delay","clearTimeout","setTimeout","debounce","_jsxs","className","children","_jsx","type","placeholder","value","onChange","e","target","onClick","prevShowMenu","onBlur","handleInputOnBlur","role","length","map","_ref4","sex","handleSelectedValue","find","_ref3","cn","peopleFromServer","born","died","fatherName","motherName","slug","App","person","setPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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AER,CACEtC,KAAM,uBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,gBACZC,KAAM,6BAER,CACEtC,KAAM,wBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,KACZC,KAAM,8BAER,CACEtC,KAAM,mBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZC,KAAM,yBAER,CACEtC,KAAM,0BACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,yBACZC,WAAY,uBACZC,KAAM,gCAER,CACEtC,KAAM,oBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,wBACZC,KAAM,0BAER,CACEtC,KAAM,mBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZC,KAAM,yBAER,CACEtC,KAAM,sBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZC,KAAM,4BAER,CACEtC,KAAM,gBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,KACZC,WAAY,KACZC,KAAM,sBAER,CACEtC,KAAM,2BACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,mBACZC,KAAM,iCAER,CACEtC,KAAM,iBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,mBACZC,KAAM,uBAER,CACEtC,KAAM,mBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,2BACZC,KAAM,yBAER,CACEtC,KAAM,iBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZC,KAAM,uBAER,CACEtC,KAAM,mBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZC,KAAM,yBAER,CACEtC,KAAM,mBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZC,KAAM,yBAER,CACEtC,KAAM,kBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZC,KAAM,wBAER,CACEtC,KAAM,yBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZC,KAAM,+BAER,CACEtC,KAAM,kBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZC,KAAM,wBAER,CACEtC,KAAM,uBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZC,KAAM,6BAER,CACEtC,KAAM,iBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,cACZC,WAAY,iBACZC,KAAM,uBAER,CACEtC,KAAM,sBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZC,KAAM,4BAER,CACEtC,KAAM,kBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,0BACZC,WAAY,iBACZC,KAAM,wBAER,CACEtC,KAAM,mBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,wBACZC,KAAM,yBAER,CACEtC,KAAM,gBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZC,KAAM,sBAER,CACEtC,KAAM,iBACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,uBACZC,KAAM,uBAER,CACEtC,KAAM,cACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,oBACZC,KAAM,oBAER,CACEtC,KAAM,gCACN4B,IAAK,IACLM,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,sBACZC,KAAM,uCC1VGC,EAAgBA,KAC3B,MAAOC,EAAQC,GAAanD,mBAAiB2C,EAAiB,KACxD,KAAEjC,EAAI,KAAEkC,EAAI,KAAEC,GAASK,EAE7B,OACE9B,eAAA,QAAMC,UAAU,UAASC,SAAA,CACvBC,cAAA,MAAIF,UAAU,QAAOC,SAAA,GAAA8B,OACf1C,EAAI,MAAA0C,OAAKR,EAAI,OAAAQ,OAAMP,EAAI,OAG7BtB,cAAC7B,EAAY,CACXE,QAAS+C,EACT9C,SAAW6B,GAAUyB,EAAUzB,OAE5B,EChBX2B,IAASC,OAAO/B,cAAC0B,EAAG,IAAKM,SAASC,eAAe,Q","file":"static/js/main.dfb9decc.chunk.js","sourcesContent":["let timerId: NodeJS.Timeout;\n\nexport const debounce = <T>(\n  callback: (value: T) => void,\n  delay: number,\n) => {\n  return (arg: T) => {\n    clearTimeout(timerId);\n\n    timerId = setTimeout(() => {\n      callback(arg);\n    }, delay);\n  };\n};\n","import { FC, useState } from 'react';\nimport cn from 'classnames';\nimport { debounce } from '../../helper';\nimport { Person } from '../../types/Person';\nimport './Autocomplete.scss';\n\ntype Props = {\n  options: Person[],\n  getValue: (value: Person) => void;\n};\n\nconst getCurrentOptions = (options: Person[], qwery: string): Person[] | [] => {\n  if (qwery) {\n    return options.filter(({ name }) => {\n      return name.toLowerCase().includes(qwery.toLowerCase());\n    });\n  }\n\n  return [...options];\n};\n\nexport const Autocomplete: FC<Props> = ({ options, getValue }) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [currentValue, setCurrentValue] = useState('');\n  const [searchQwery, setSearchQwery] = useState('');\n  const currentOptions = getCurrentOptions(options, searchQwery);\n\n  const debouncedSearchQuery = debounce<string>((arg) => {\n    setSearchQwery(arg);\n  }, 1000);\n\n  const handleInputOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n\n    setCurrentValue(value);\n    debouncedSearchQuery(value);\n  };\n\n  const handleInputOnBlur = () => {\n    setTimeout(() => setShowMenu(false), 200);\n  };\n\n  const handleSelectedValue = (value: string) => {\n    setCurrentValue(value);\n\n    getValue(currentOptions.find(({ name }) => {\n      return name === value;\n    }) as Person);\n\n    setShowMenu(false);\n  };\n\n  return (\n    <div className=\"dropdown is-active\">\n      <div className=\"dropdown-trigger\">\n        <input\n          type=\"search\"\n          placeholder=\"Enter a part of the name\"\n          className=\"input\"\n          value={currentValue}\n          onChange={handleInputOnChange}\n          onClick={() => setShowMenu(prevShowMenu => !prevShowMenu)}\n          onBlur={handleInputOnBlur}\n        />\n      </div>\n\n      {showMenu && (\n        <div className=\"dropdown-menu\" role=\"menu\">\n          <div className=\"dropdown-content scroll-container\">\n            {currentOptions.length > 0\n              && currentOptions.map(({ name, sex }) => (\n                <button\n                  type=\"button\"\n                  className=\"dropdown-item button is-white\"\n                  key={name}\n                  onClick={() => handleSelectedValue(name)}\n                >\n                  <p\n                    className={cn({\n                      'has-text-link': sex === 'm',\n                      'has-text-danger': sex === 'f',\n                    })}\n                  >\n                    {name}\n                  </p>\n                </button>\n              ))}\n\n            {currentOptions.length === 0 && (\n              <p className=\"has-text-grey dropdown-item\">\n                No options\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import React, { useState } from 'react';\nimport { Autocomplete } from './components/Autocomplete/Autocomplete';\nimport './App.scss';\nimport { peopleFromServer } from './data/people';\nimport { Person } from './types/Person';\n\nexport const App: React.FC = () => {\n  const [person, setPerson] = useState<Person>(peopleFromServer[0]);\n  const { name, born, died } = person;\n\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">\n        {`${name} (${born} = ${died})`}\n      </h1>\n\n      <Autocomplete\n        options={peopleFromServer}\n        getValue={(value) => setPerson(value)}\n      />\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}